#!/usr/bin/env zsh

source util.sh

OPTIND=1
SEND_NOTIFICATION=1

while getopts q arg; do
    case $arg in
        q) SEND_NOTIFICATION=0 ;;
        ?)
            echo_red "Bad options"
            echo "Usage: $0 [-q]"
            echo "-q will not send a push notification, regardless of how long it took to run the tests"
            exit -1
            ;;
    esac
done

shift $((OPTIND-1))

function notify_if_attention_lost() {
    runtime=$1
    subject="$2"
    content="$3"

    estimated_time_before_attention_lost=60  # frankly, this is optimistic

    echo_cyan "${subject} took ${runtime} seconds."
    if [[ runtime -gt ${estimated_time_before_attention_lost} && ${SEND_NOTIFICATION} -eq 1 ]]; then
        echo_cyan "Sending push to notify it's time to go back to work."
        #notify -t "${subject}" -c "${content}"
    fi
}

function run_cmd() {
    cmd="$1"
    subject="$2"

    start_time=`date +%s`

    eval $cmd
    success=$?

    end_time=`date +%s`

    runtime=$((end_time - start_time))


    if [ $success -ne 0 ]; then
        echo_red "Tests failed ðŸ˜ž"
        notify_if_attention_lost ${runtime} "${subject}" "Tests failed ðŸ˜ž"
    else
        echo_green "All Tests Successful ðŸŽ‰"
        notify_if_attention_lost ${runtime} "${subject}" "All Tests Successful ðŸŽ‰"
    fi
    return $success
}

GIT_ROOT=$(git rev-parse --show-toplevel)
PROJECT_NAME=$(basename ${GIT_ROOT})

pushd "${GIT_ROOT}" 2>&1 >/dev/null

if [ -d "fastlane" ] && [ -f "Gemfile" ]; then
    echo_cyan "Running fastlane test"
    run_cmd "bundle && bundle exec fastlane test" "Fastlane tests"
    exit_result=$?
elif [ -f "book.toml" ]; then
    echo_cyan "Running mdbook-generate-summary && mdbook test"
    rm -f src/SUMMARY.md 2>/dev/null
    run_cmd "mdspell --ignore-acronyms --ignore-numbers --en-us --report \"src/**/*.md\" && mdbook-generate-summary && mdbook test 2>/dev/null" "${PROJECT_NAME} tests"
    exit_result=$?
    rm -f src/SUMMARY.md 2>/dev/null
elif [ -d "spec" ]; then
    echo_cyan "Running rspec"
    run_cmd "bundle exec rspec ." "${PROJECT_NAME} tests"
    exit_result=$?
else
    echo_red "Don't know how to run tests for ${PROJECT_NAME}"
fi

popd 2>&1 >/dev/null
exit ${exit_result}
